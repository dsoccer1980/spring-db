/*
 * This file is generated by jOOQ.
 */
package ru.dsoccer.jooq.entities.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import ru.dsoccer.jooq.entities.tables.Person;
import ru.dsoccer.jooq.entities.tables.records.PersonRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonDao extends DAOImpl<PersonRecord, ru.dsoccer.jooq.entities.tables.pojos.Person, Long> {

    /**
     * Create a new PersonDao without any configuration
     */
    public PersonDao() {
        super(Person.PERSON, ru.dsoccer.jooq.entities.tables.pojos.Person.class);
    }

    /**
     * Create a new PersonDao with an attached configuration
     */
    public PersonDao(Configuration configuration) {
        super(Person.PERSON, ru.dsoccer.jooq.entities.tables.pojos.Person.class, configuration);
    }

    @Override
    public Long getId(ru.dsoccer.jooq.entities.tables.pojos.Person object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ru.dsoccer.jooq.entities.tables.pojos.Person> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Person.PERSON.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<ru.dsoccer.jooq.entities.tables.pojos.Person> fetchById(Long... values) {
        return fetch(Person.PERSON.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public ru.dsoccer.jooq.entities.tables.pojos.Person fetchOneById(Long value) {
        return fetchOne(Person.PERSON.ID, value);
    }

    /**
     * Fetch records that have <code>PERSON_NAME BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ru.dsoccer.jooq.entities.tables.pojos.Person> fetchRangeOfPersonName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Person.PERSON.PERSON_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PERSON_NAME IN (values)</code>
     */
    public List<ru.dsoccer.jooq.entities.tables.pojos.Person> fetchByPersonName(String... values) {
        return fetch(Person.PERSON.PERSON_NAME, values);
    }

    /**
     * Fetch records that have <code>COMPANY_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ru.dsoccer.jooq.entities.tables.pojos.Person> fetchRangeOfCompanyId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Person.PERSON.COMPANY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>COMPANY_ID IN (values)</code>
     */
    public List<ru.dsoccer.jooq.entities.tables.pojos.Person> fetchByCompanyId(Long... values) {
        return fetch(Person.PERSON.COMPANY_ID, values);
    }
}
